import {
    NativeModules,
    Dimensions,
    Platform
} from 'react-native';

const { RNImagePicker } = NativeModules;

const { width } = Dimensions.get('window');
/**
 * 默认参数
 */
const defaultOptions = {
    imageCount: 9,             // 最大选择图片数目，默认6
    isRecordSelected: false,   // 是否已选图片
    isCamera: false,            // 是否允许用户在内部拍照，默认true
    cropping: false,             // 是否允许裁剪，默认false, imageCount 为1才生效
    width: ~~(width * 0.6),    // 裁剪宽度，默认屏幕宽度60%
    height: ~~(width * 0.6),    // 裁剪高度，默认屏幕宽度60%
    isGif: false,              // 是否允许选择GIF，默认false，暂无回调GIF数据
    showCropCircle: false,     // 是否显示圆形裁剪区域，默认false
    circleCropRadius: width / 2, // 圆形裁剪半径，默认屏幕宽度一半
    showCropFrame: true,       // 是否显示裁剪区域，默认true
    showCropGrid: false,       // 是否隐藏裁剪区域网格，默认false
    compressImageQuality: 1,               // 压缩质量0-1
    includeBase64: false,       // 是否返回base64编码，默认不返回
    multiple: false,
    mediaType: 'photo'
};

export default {
    /**
     * 以Promise形式调用
     * 1、相册参数暂时只支持默认参数中罗列的属性；
     * 2、使用方式
     * @param {Object} options 相册参数
     * @return {Promise} 返回一个Promise对象
    */
    openPicker(options) {
        const optionObj = {
            ...defaultOptions,
            ...options,
            compressImageQuality: (options.compressImageQuality || defaultOptions.compressImageQuality) * 100
        };
        return RNImagePicker.openPicker(Platform.OS == 'ios' ? { mediaType: 'photo', ...options, } : optionObj)
            .then(res => {
                if (!options.multiple&&res.length==1) {
                    return res[0]
                }
                return res
            });
    },

    /**
     * 打开相机支持裁剪参数
     * @param options
     */
    openCamera(options) {
        const optionObj = {
            ...defaultOptions,
            ...options,
        };
        return RNImagePicker.openCamera(Platform.OS == 'ios' ? options : optionObj).then(res=>{
            if(res.length==1){
                return res[0]
            }
            return res
        })
    },
};
